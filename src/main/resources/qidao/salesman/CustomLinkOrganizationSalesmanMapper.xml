<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidao.qidao.salesman.sales.mapper.CustomLinkOrganizationSalesmanMapper">

    <resultMap type="com.qidao.qidao.salesman.sales.domain.LinkOrganizationSalesmanRes"
               id="LinkOrganizationSalesmanResult">
        <result property="organizationName" column="organization_name"/>
        <result property="type" column="type"/>
        <result property="createTime" column="create_time"/>
        <result property="salesmanName" column="salesman_name"/>
        <result property="salesmanId" column="salesman_id"/>
        <result property="organizationId" column="organization_id"/>
        <result property="id" column="id"/>
    </resultMap>

    <sql id="selectLinkOrganizationSalesmanVo">
        select organization_name, type, create_time, salesman_name, salesman_id, organization_id, id from link_organization_salesman
    </sql>

    <select id="getList" resultMap="LinkOrganizationSalesmanResult">
<!--        <include refid="selectLinkOrganizationSalesmanVo"></include>-->
        select organization_name, type, create_time,
               salesman_name, salesman_id,
               organization_id, id
        from link_organization_salesman
        <where>
            <if test="salesmanName != null and salesmanName != ''">
                and salesman_name like concat(concat('%',#{salesmanName}),'%')
            </if>
            <if test="startTime != null and endTime != null">
                and create_time between #{startTime} and #{endTime}
            </if>
            <if test="startTime != null">
                and create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                and create_time <![CDATA[ <= ]]> #{endTime}
            </if>
            and del_flag = 0
        </where>
    </select>

    <resultMap id="SalesPerformance" type="com.qidao.qidao.salesman.sales.domain.SalesPerformance">
        <result property="salesmanId" column="salesman_id"/>
        <result property="salesmanName" column="salesman_name"/>
        <result property="performance" column="performance"/>
        <result property="startTime" column="startTime"/>
        <result property="salesTime" column="salesTime"/>
    </resultMap>
    
    <select id="getPerformanceList" resultMap="SalesPerformance">
        select salesman_id, salesman_name,
               MIN(create_time) as startTime, DATEDIFF(MAX(create_time),MIN(create_time)) + 1 as salesTime,
               count(distinct member_id) as performance
        from link_organization_salesman
        <where>
            <if test="salesmanName != null and salesmanName != ''">
                and salesman_name like concat(concat('%',#{salesmanName}),'%')
            </if>
            <if test="startTime != null and endTime != null">
                and create_time between #{startTime} and #{endTime}
            </if>
            <if test="startTime != null">
                and create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                and create_time <![CDATA[ <= ]]> #{endTime}
            </if>
            and del_flag = 0
            group by salesman_id,salesman_name
            order by performance desc
        </where>
    </select>

    <select id="getOrganizationListBySalesmanId" resultType="java.lang.String">
        select organization_id
        from link_organization_salesman
        <where>
            and salesman_id = #{salesmanId}
            AND del_flag = 0
        </where>
    </select>
    <select id="export" resultType="com.qidao.qidao.salesman.sales.domain.Sales">
        select salesman_name, organization_name, type
        from link_organization_salesman
        <where>
            and salesman_id = #{salesmanId}
            and del_flag = 0
        </where>
    </select>
</mapper>
