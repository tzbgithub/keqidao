<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qidao.qidao.order.order.mapper.TOrderMapper">

    <resultMap type="com.qidao.qidao.order.order.domain.TOrder" id="TOrderResult">
        <result property="quantity" column="quantity"/>
        <result property="orderPrice" column="order_price"/>
        <result property="payPrice" column="pay_price"/>
        <result property="payTime" column="pay_time"/>
        <result property="memberName" column="member_name"/>
        <result property="status" column="status"/>
        <result property="memberId" column="member_id"/>
        <result property="productSkuId" column="product_sku_id"/>
        <result property="no" column="no"/>
        <result property="delFlag" column="del_flag"/>
        <result property="updateBy" column="update_by"/>
        <result property="createBy" column="create_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
        <result property="id" column="id"/>
        <result property="payWay" column="pay_way"/>
    </resultMap>

    <sql id="selectTOrderVo">
        select quantity,
               order_price,
               pay_way,
               pay_price,
               pay_time,
               member_name,
               status,
               member_id,
               product_sku_id, no, del_flag, update_by, create_by, update_time, create_time, id
        from
        order
    </sql>

    <select id="selectTOrderList" parameterType="com.qidao.qidao.order.order.domain.TOrder" resultMap="TOrderResult">
        <include refid="selectTOrderVo"/>
        <where>
            <if test="quantity != null ">and quantity = #{quantity}</if>
            <if test="orderPrice != null ">and order_price = #{orderPrice}</if>
            <if test="payPrice != null ">and pay_price = #{payPrice}</if>
            <if test="payTime != null ">and pay_time = #{payTime}</if>
            <if test="memberName != null  and memberName != ''">and member_name like concat('%', #{memberName}, '%')
            </if>
            <if test="status != null ">and status = #{status}</if>
            <if test="memberId != null ">and member_id = #{memberId}</if>
            <if test="productSkuId != null ">and product_sku_id = #{productSkuId}</if>
            <if test="no != null ">and no = #{no}</if>
            AND del_flag = 0
        </where>
    </select>

    <select id="selectTOrderById" parameterType="Long" resultMap="TOrderResult">
        <include refid="selectTOrderVo"/>
        where id = #{id}
        AND del_flag = 0
    </select>

    <insert id="insertTOrder" parameterType="com.qidao.qidao.order.order.domain.TOrder">
        insert into order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="quantity != null ">quantity,</if>
            <if test="orderPrice != null ">order_price,</if>
            <if test="payPrice != null ">pay_price,</if>
            <if test="payTime != null ">pay_time,</if>
            <if test="memberName != null  and memberName != ''">member_name,</if>
            <if test="status != null ">status,</if>
            <if test="memberId != null ">member_id,</if>
            <if test="productSkuId != null ">product_sku_id,</if>
            <if test="no != null ">no,</if>
            <if test="delFlag != null ">del_flag,</if>
            <if test="updateBy != null ">update_by,</if>
            <if test="createBy != null ">create_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="id != null ">id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="quantity != null ">#{quantity},</if>
            <if test="orderPrice != null ">#{orderPrice},</if>
            <if test="payPrice != null ">#{payPrice},</if>
            <if test="payTime != null ">#{payTime},</if>
            <if test="memberName != null  and memberName != ''">#{memberName},</if>
            <if test="status != null ">#{status},</if>
            <if test="memberId != null ">#{memberId},</if>
            <if test="productSkuId != null ">#{productSkuId},</if>
            <if test="no != null ">#{no},</if>
            <if test="delFlag != null ">#{delFlag},</if>
            <if test="updateBy != null ">#{updateBy},</if>
            <if test="createBy != null ">#{createBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="id != null ">#{id},</if>
        </trim>
    </insert>

    <update id="updateTOrder" parameterType="com.qidao.qidao.order.order.domain.TOrder">
        update order
        <trim prefix="SET" suffixOverrides=",">
            <if test="quantity != null ">quantity = #{quantity},</if>
            <if test="orderPrice != null ">order_price = #{orderPrice},</if>
            <if test="payPrice != null ">pay_price = #{payPrice},</if>
            <if test="payTime != null ">pay_time = #{payTime},</if>
            <if test="memberName != null  and memberName != ''">member_name = #{memberName},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="memberId != null ">member_id = #{memberId},</if>
            <if test="productSkuId != null ">product_sku_id = #{productSkuId},</if>
            <if test="no != null ">no = #{no},</if>
            <if test="delFlag != null ">del_flag = #{delFlag},</if>
            <if test="updateBy != null ">update_by = #{updateBy},</if>
            <if test="createBy != null ">create_by = #{createBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTOrderById" parameterType="Long">
        delete
        from order
        where id = #{id}
    </delete>

    <delete id="deleteTOrderByIds" parameterType="String">
        delete from order where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <update id="logicDelByIds" parameterType="String">
        update order
        set del_flag = 1
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>